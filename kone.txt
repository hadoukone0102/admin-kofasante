// app/Http/Controllers/AdministratorController.php

namespace App\Http\Controllers;

use App\Models\Administrator;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AdministratorController extends Controller
{
    // ...

    public function store(Request $request)
    {
        $request->validate([
            'nom' => 'required',
            'prenom' => 'required',
            'contact' => 'required|unique:administrators',
            'mot_de_passe' => 'required|min:6',
            'type' => 'required',
        ]);

        // Check if the request is authorized to create a "Super Admin"
        if ($request->type === 'Super Admin' && !$this->isAuthorizedToCreateSuperAdmin()) {
            return response()->json(['message' => 'Vous n\'êtes pas autorisé à créer un Super Admin.'], 403);
        }

        // Check if an administrator with the same contact already exists
        if (Administrator::where('contact', $request->contact)->exists()) {
            return response()->json(['message' => 'Un administrateur avec ce contact existe déjà.'], 422);
        }

        $administrator = new Administrator;
        $administrator->nom = $request->nom;
        $administrator->prenom = $request->prenom;
        $administrator->contact = $request->contact;
        $administrator->mot_de_passe = bcrypt($request->mot_de_passe);
        $administrator->type = $request->type;
        $administrator->save();

        return response()->json(['message' => 'Administrateur créé avec succès'], 201);
    }

    // ...

    private function isAuthorizedToCreateSuperAdmin()
    {
        // Check if the authenticated user is an existing Super Admin
        $authenticatedAdmin = Auth::user();

        return $authenticatedAdmin && $authenticatedAdmin->type === 'Super Admin';
    }
}
###############################################################################################################

// app/Http/Controllers/AdministratorController.php

namespace App\Http\Controllers;

use App\Models\Administrator;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AdministratorController extends Controller
{
    public function store(Request $request)
    {
        $request->validate([
            'nom' => 'required',
            'prenom' => 'required',
            'contact' => 'required|unique:administrators',
            'mot_de_passe' => 'required|min:6',
            'type' => 'required',
        ]);

        // Check if the request is authorized to create a "Super Admin"
        if ($request->type === 'Super Admin' && !$this->isAuthorizedToCreateSuperAdmin()) {
            return response()->json(['message' => 'Vous n\'êtes pas autorisé à créer un Super Admin.'], 403);
        }

        // Check if an administrator with the same contact already exists
        if (Administrator::where('contact', $request->contact)->exists()) {
            return response()->json(['message' => 'Un administrateur avec ce contact existe déjà.'], 422);
        }

        $administrator = new Administrator;
        $administrator->nom = $request->nom;
        $administrator->prenom = $request->prenom;
        $administrator->contact = $request->contact;
        $administrator->mot_de_passe = bcrypt($request->mot_de_passe);
        $administrator->type = $request->type;
        $administrator->save();

        return response()->json(['message' => 'Administrateur créé avec succès'], 201);
    }

    // Rest of the controller...

    private function isAuthorizedToCreateSuperAdmin()
    {
        // Implement your logic to check if the request is authorized
        // For example, you might check the user making the request, or other authentication mechanisms
        // Return true if authorized, false otherwise
        return true; // Change this based on your actual authorization logic
    }
}

################################################################################################################

// app/Http/Controllers/AdministratorController.php

namespace App\Http\Controllers;

use App\Models\Administrator;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AdministratorController extends Controller
{
    public function store(Request $request)
    {
        $request->validate([
            'nom' => 'required',
            'prenom' => 'required',
            'contact' => 'required|unique:administrators',
            'mot_de_passe' => 'required|min:6',
            'type' => 'required',
        ]);

        // Check if an administrator with the same contact already exists
        if (Administrator::where('contact', $request->contact)->exists()) {
            return response()->json(['message' => 'Un administrateur avec ce contact existe déjà.'], 422);
        }

        $administrator = new Administrator;
        $administrator->nom = $request->nom;
        $administrator->prenom = $request->prenom;
        $administrator->contact = $request->contact;
        $administrator->mot_de_passe = bcrypt($request->mot_de_passe);
        $administrator->type = $request->type;
        $administrator->save();

        return response()->json(['message' => 'Administrateur créé avec succès'], 201);
    }

    public function login(Request $request)
    {
        $request->validate([
            'contact' => 'required|exists:administrators',
            'mot_de_passe' => 'required',
        ]);

        if (Auth::attempt(['contact' => $request->contact, 'password' => $request->mot_de_passe])) {
            $token = Auth::user()->createToken('token-name')->plainTextToken;

            return response()->json(['token' => $token], 200);
        }

        return response()->json(['message' => 'Échec de l\'authentification'], 401);
    }
}

#################################################################################################################


// app/Http/Controllers/AdministratorController.php

namespace App\Http\Controllers;

use App\Models\Administrator;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AdministratorController extends Controller
{
    // ... rest of the controller

    public function login(Request $request)
    {
        $request->validate([
            'contact' => 'required|exists:administrators',
            'password' => 'required',
        ]);

        // ... rest of the login method
    }
}

###########################################################
// app/Http/Controllers/AdministratorController.php

namespace App\Http\Controllers;

use App\Models\Administrator;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AdministratorController extends Controller
{
    public function store(Request $request)
    {
        $request->validate([
            'contact' => 'required|unique:administrators',
            // ... rest of the validation rules
        ]);

        // Check if an administrator with the same contact already exists
        if (Administrator::where('contact', $request->contact)->exists()) {
            return response()->json(['message' => 'Un administrateur avec ce contact existe déjà.'], 422);
        }

        // ... rest of the store method
        return response()->json(['message' => 'Administrateur créé avec succès'], 201);
    }

    // ... rest of the controller
}

#####################################################


